package Prk_02;

import javax.swing.*;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;

public class Medienverwaltung {
	ArrayList<Medium> medienArrayList = new ArrayList<Medium>();
	Iterator<Medium> it = medienArrayList.iterator();
	
	public void aufnehmen(Medium medium) {
		medienArrayList.add(medium);
	}
	
	public void zeigeMedien() {
		Collections.sort(medienArrayList);
//		Collections.sort(medienArrayList, new JahrComparator());
		
		if (it.hasNext()) 
			for (Medium s : medienArrayList) { 
				s.druckeDaten(System.out);	 
			} 	
		
//		while(it.hasNext()) {
//			it.next().druckeDaten();
//		}
	}
	
	//try-with-resources
	public void zeigeMedienFile() throws HeadlessException, FileNotFoundException, EmptyFilenameException {	
		boolean isError = false;
		
		while (!isError) {
			try {
				String dateiname = JOptionPane.showInputDialog("Dateiname");
				if (dateiname.isEmpty()) 
					throw new EmptyFilenameException("Bitte gültiger Dateiname");
				try (FileOutputStream out = new FileOutputStream(dateiname)) {
								
					Collections.sort(medienArrayList);
							
					if (it.hasNext()) 
						for (Medium s : medienArrayList)
							s.druckeDaten(out);
					isError = true; 			
				}	
				
			} catch (EmptyFilenameException ie) {				
				int dialogButton = JOptionPane.showConfirmDialog(null, "Dateinamen ist leer! Neuen Dateinamen wählen?", "Hinweis", JOptionPane.YES_NO_OPTION);
				if (dialogButton == JOptionPane.NO_OPTION)  
					isError = true; 	
			} catch (NullPointerException npe) {
				isError = true;
			} catch(Exception e) {
				// Output unexpected Exceptions
				System.out.println("keine Ahnung");
				e.printStackTrace();					
			}
		}
	}
	
	// finally-Block
	public void zeigeMedienFile_2() throws HeadlessException, EmptyFilenameException {	
		boolean isError = false;
		
		while (!isError) {
			FileOutputStream out = null;
			
			try {			
				String dateiname = JOptionPane.showInputDialog("Dateiname");				
				if (dateiname.isEmpty()) 
					throw new EmptyFilenameException("Bitte gültiger Dateiname");		
			
				out = new FileOutputStream(dateiname);	
				
				Collections.sort(medienArrayList);
					
				if (it.hasNext()) 
					for (Medium s : medienArrayList)
						s.druckeDaten(out);
				isError = true; 			

			} catch (NullPointerException npe) {
				isError = true;		
			} catch (EmptyFilenameException ie) {				
				int dialogButton = JOptionPane.showConfirmDialog(null, "Dateinamen ist leer! Neuen Dateinamen wählen?", "Hinweis", JOptionPane.YES_NO_OPTION);
				if (dialogButton == JOptionPane.NO_OPTION)  
					isError = true; 	 										
			} catch(Exception e) {
				// Output unexpected Exceptions
				System.out.println("keine Ahnung");
				e.printStackTrace();				
			} finally {
				if (out != null)
					try {
						out.flush();
						out.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
			} 										
		}
	}
	
//	// Aufgabe 28
//	static void copy(File from, File to) throws FileNotFoundException, IOException {
//		try (InputStream in = new FileInputStream(from); 
//				OutputStream out = new FileOutputStream(to)) {
//			int c;
//
//			while ((c = in.read()) != -1) {
//				 out.write(c);
//			}
//			in.close(); 
//			out.close(); 
//		} catch (FileNotFoundException fnfe) {
//			JOptionPane.showMessageDialog(null, "Keine Datei ist vorhanden");
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
//	}

	//Aufgabe 28b
	static void cat(File quelle) throws FileNotFoundException, IOException {
		try (RandomAccessFile datei = new RandomAccessFile(quelle, "r")) {
			int c;

			while ((c = datei.read()) != -1) {
				System.out.print((char) c);
				c = datei.read();
			}
			datei.close();
		} catch (FileNotFoundException fnfe) {
			JOptionPane.showMessageDialog(null, "Keine Datei ist vorhanden");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void sucheNeuesMedium() {
		try {
			int neuesJahr = medienArrayList.get(0).getJahr();
			int index = 0;
			for (int i = 1; i < medienArrayList.size(); i++)
				if (neuesJahr < medienArrayList.get(i).getJahr()) {
					neuesJahr = medienArrayList.get(i).getJahr();
					index = i;
				}
			medienArrayList.get(index).druckeDaten(System.out);
			System.out.println("Das aktuellste Jahr: " + neuesJahr);
		} catch (IndexOutOfBoundsException e) {
			JOptionPane.showMessageDialog(null, "Kein Medium ist vorhanden");
		}
	}
	
	public double berechneErscheinungsjahr() {
		if (medienArrayList.size()>0) {
			double s = 0.0;
			for (int i = 0; i < medienArrayList.size(); i++) {
				s += medienArrayList.get(i).getJahr();
			}
			return s/medienArrayList.size();
		}
		else return 0.0; 
	}	
}
